"""Initial setup

Revision ID: d4df74b54307
Revises: 
Create Date: 2023-01-25 12:21:49.285707

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd4df74b54307'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cpe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False, comment='the name of the CPE'),
    sa.Column('name_id', sa.String(length=256), nullable=False, comment='the name ID of the CPE'),
    sa.Column('title_en', sa.String(length=512), nullable=True, comment='the English title of the CPE'),
    sa.Column('sys_creation_date', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False, comment='Date when the CPE record was created.'),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False, comment='Date when the CPE record was modified.'),
    sa.Column('part', sa.String(length=1), nullable=False, comment='the part of CPE'),
    sa.Column('vendor', sa.String(length=128), nullable=False, comment='the vendor of CPE'),
    sa.Column('product', sa.String(length=128), nullable=False, comment='the product of CPE'),
    sa.Column('version', sa.String(length=128), nullable=False, comment='the version of CPE'),
    sa.Column('update', sa.String(length=128), nullable=True, comment='the update of CPE'),
    sa.Column('edition', sa.String(length=128), nullable=True, comment='the edition of CPE'),
    sa.Column('language', sa.String(length=128), nullable=True, comment='the language of CPE'),
    sa.Column('sw_edition', sa.String(length=128), nullable=True, comment='the sw_edition of CPE'),
    sa.Column('target_sw', sa.String(length=128), nullable=True, comment='the target_sw of CPE'),
    sa.Column('target_hw', sa.String(length=128), nullable=True, comment='the target_hw of CPE'),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='CPE JSON representation'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='cpe_uix_1'),
    comment='Table that contains the list of CPEs'
    )
    op.create_index('cpe_idx1', 'cpe', ['product', 'version', 'vendor'], unique=False)
    op.create_index(op.f('ix_cpe_created'), 'cpe', ['created'], unique=False)
    op.create_index(op.f('ix_cpe_last_modified_date'), 'cpe', ['last_modified_date'], unique=False)
    op.create_index(op.f('ix_cpe_title_en'), 'cpe', ['title_en'], unique=False)
    op.create_table('fetch_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False, comment='the name of the status'),
    sa.Column('sys_creation_date', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False, comment='Date when record was modified.'),
    sa.Column('stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='JSON column for additional details'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='fetch_status_uix_1'),
    comment='Table that contains the fetch status for different keys'
    )
    op.create_table('vuln',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vuln_id', sa.String(length=20), nullable=True),
    sa.Column('sys_creation_date', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('published_date', sa.DateTime(), nullable=False, comment='Date when record published.'),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False, comment='Date when record was modified.'),
    sa.Column('source', sa.String(length=100), nullable=True, comment='the source of the vulnerability'),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Vuln JSON representation'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vuln_last_modified_date'), 'vuln', ['last_modified_date'], unique=False)
    op.create_index(op.f('ix_vuln_published_date'), 'vuln', ['published_date'], unique=False)
    op.create_index(op.f('ix_vuln_vuln_id'), 'vuln', ['vuln_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vuln_vuln_id'), table_name='vuln')
    op.drop_index(op.f('ix_vuln_published_date'), table_name='vuln')
    op.drop_index(op.f('ix_vuln_last_modified_date'), table_name='vuln')
    op.drop_table('vuln')
    op.drop_table('fetch_status')
    op.drop_index(op.f('ix_cpe_title_en'), table_name='cpe')
    op.drop_index(op.f('ix_cpe_last_modified_date'), table_name='cpe')
    op.drop_index(op.f('ix_cpe_created'), table_name='cpe')
    op.drop_index('cpe_idx1', table_name='cpe')
    op.drop_table('cpe')
    # ### end Alembic commands ###
